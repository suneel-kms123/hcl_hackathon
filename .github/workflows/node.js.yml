# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build_appointment_service:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./appointment_service

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps: 
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  

  build_patient_service:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./patient_service

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps: 
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
      working-directory: ./appoint_service
    - run: npm run build --if-present
    - run: npm test
  
  
  Fortify-AST-Scan:
    # Use the appropriate runner for building your source code. Ensure dev tools required to build your code are present and configured appropriately (MSBuild, Python, etc).
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      # pull-requests: write     # Required if DO_PR_COMMENT is set to true

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      - name: Run Fortify Scan
        uses: fortify/github-action@ef5539bf4bd9c45c0bd971978f635a69eae55297
        with:
          sast-scan: true          # Run a SAST scan; if not specified or set to false, no SAST scan will be run
          debricked-sca-scan: true
        env:
            FOD_URL: https://ams.fortify.com                 # Must be hardcoded or configured through GitHub variable, not secret
            FOD_TENANT: ${{secrets.FOD_TENANT}}              # Either tenant/user/password or client id/secret are required;
            FOD_USER: ${{secrets.FOD_USER}}                  # these should be configured through GitHub secrets.
            FOD_PASSWORD: ${{secrets.FOD_PAT}}